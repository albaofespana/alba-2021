{"version":3,"sources":["api/TESTS.js","components/MainPage.js","components/QuestionCount.js","components/Question.js","components/Quiz.js","components/Result.js","components/Loading.js","components/BirthdayCalc.js","components/DualMbti.js","components/StoryTelling.js","components/Intro.js","components/ResultToIntro.js","components/ScrollToTop.js","App.js","reportWebVitals.js","index.js"],"names":["range","start","stop","step","result","i","push","TESTS","info","mainTitle","subTitle","mainUrl","scoreType","mainImage","thumbImage","questions","question","answers","type","score","content","results","desc","query","score_range","img_src","real_meta","MainPage","props","_all_tests_url","length","state","all_tests_url","className","this","map","item","to","src","alt","replaceAll","Component","QuestionCount","ProgressBar","now","quizCount","totalCount","variant","Question","Quiz","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","qAndA","quizNum","qAndAImg","questionImage","_questions","nextQuizNum","Button","value","onClick","e","preventDefault","onChangeMode","target","setState","bind","size","arrayShuffler","renderImgAnswerOptions","renderAnswerOptions","Result","_sharable_url","window","location","href","_current_url","slice","split","filter","t","_current_test","reverse","_current_result","mode","sharable_url","current_url","current_test","current_result","num_shares_count","_onBackToStartButtonClick","_onShareButtonClick","alert","current_tests_path","basename","process","path","component","test","exact","_current_test_contents","final_type","final_desc","final_real_meta","j","data-meta","Card","bg","Body","Text","App","history","goBack","resultRender","text","meta","_page","resultPageRender","introPageRender","mainPageRender","pageRenderer","defaultOptions","loop","autoplay","animationData","loading","rendererSettings","preserveAspectRatio","Loading","includes","adsbygoogle","style","display","data-ad-unit","data-ad-width","data-ad-height","async","options","height","width","data-ad-client","data-ad-slot","data-ad-format","data-full-width-responsive","BirthdayCalc","currentYear","Date","getFullYear","year","month","day","field","fields","InputGroup","FormControl","onChange","_year","Number","pattern","error","placeholder","max","maxLength","_month","_day","_finalBirth","final_result","toString","DualMbti","myColor","yourColor","myMBTI","yourMBTI","personal_colors","open","who","_colors","Object","keys","_options","c","Form","Group","Label","Control","as","_myColor","_myMbti","renderColorOptions","_yourColor","_yourMbti","undefined","_final_result","personalColorTestRedirector","StoryTelling","renderStoryImg","Intro","_answer_type_obj","k","l","today","String","getMonth","date","getDate","padStart","hour","getHours","minute","getMinutes","answer_type_obj","quizNumber","counted_score","result_url","quiz_url","participants","replace","_onStartButtonClick","_onMainButtonClick","_mainTitle","_subTitle","_thumbImage","final_score","max_keys","z","key","final_result_obj","_which_type_arr","which","index","self","indexOf","first_type","second_type","type_arr","max_val","forEach","_quizNum","_score","_mode","_scores","_answer","_answer_obj","assign","console","log","setTimeout","result_contents","resultCaculator","final_score_query","render","quizPageRender","lodingPageRender","withRouter","ResultToIntro","test_main_url","defaultGuidePageRender","ScrollToTop","prevProps","scrollTo","children","_all_tests_result_url","_final_render_routes","result_route","all_tests_result_url","final_render_routes","currentDocumentTimestamp","performance","timing","domLoading","getTime","reload","reloadPage","Helmet","name","data-react-helmet","rel","property","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootElement","document","getElementById","hasChildNodes","hydrate"],"mappings":"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","file":"static/js/main.715c5d95.chunk.js","sourcesContent":["function range(start, stop, step) {\n    if (typeof stop == 'undefined') {\n\n        stop = start;\n        start = 0;\n    }\n\n    if (typeof step == 'undefined') {\n        step = 1;\n    }\n\n    if ((step > 0 && start >= stop) || (step < 0 && start <= stop)) {\n        return [];\n    }\n\n    var result = [];\n    for (var i = start; step > 0 ? i < stop : i > stop; i += step) {\n        result.push(i);\n    }\n\n    return result;\n};\n\nvar TESTS = [\n    // daengdaeng\n    {\n        info : {\n            mainTitle:\"베르나르다 알바 캐릭터 성격 분석\",\n            subTitle:\"내가 베르나르다 알바 속 캐릭터라면?\",\n            mainUrl:\"alba\",\n            scoreType:\"typeCounting\",\n            mainImage:\"https://user-images.githubusercontent.com/35620531/109659976-a56de980-7bab-11eb-80e0-bf6de62f58a7.png\",\n            thumbImage:\"https://user-images.githubusercontent.com/35620531/109660083-cb938980-7bab-11eb-8a64-0acadaad8233.png\"\n        },\n        questions:[\n            {\n                question: '기분이 별로일 때 나는 주로',\n                answers:[\n                    {\n                        type: \"아델라\",\n                        score: 2,\n                        content: '기분이 풀릴때까지 혼자 있다가 기분이 나아 질 때 힘차게 돌아온다.'\n                    },\n                    {\n                        type: \"마르띠리오\",\n                        score: 5,\n                        content: '누가 건드리만 하면 그 사람에 대해 참고 있던 게 폭발한다. '\n                    },\n                    {\n                        type: \"막달레나\",\n                        score: 10,\n                        content: '“생각할수록 기분이 나빠지니 생각하지 않으려 노력한다.'\n                    },\n                    {\n                        type: \"앙구스티아스\",\n                        score: 10,\n                        content: '혼자 왜 기분이 좋지 않을까 곱씹는다.'\n                    },\n                ],\n            },\n            {\n                question: \"모르는 사람과 함께 있을 때 나는 주로 \",\n                answers:[\n                    {\n                        type: \"아델라\",\n                        score: 2,\n                        content: \"가만히 있으면 심심하니 말을 걸어본다. \"\n                    },\n                    {\n                        type: \"아멜리아\",\n                        score: 5,\n                        content: \"눈치를 보다가 친절한 사람 같으면 말을 걸어본다.\"\n                    },\n                    {\n                        type: \"앙구스티아스\",\n                        score: 10,\n                        content: \"모르는 사람에게 말을 걸 필요가 있나?\"\n                    },\n                    {\n                        type: \"마르띠리오\",\n                        score: 10,\n                        content: \"얕보이지 않게 눈에 힘을 준다.\"\n                    },\n                ]\n            },\n            {\n                question: \"가족들 사이에서 나의 역할은\",\n                answers:[\n                    {\n                        type: \"마르띠리오\",\n                        score: 2,\n                        content: \"모두가 어려워 하는 아픈 손가락\"\n                    },\n                    {\n                        type: \"아멜리아\",\n                        score: 5,\n                        content: \"톡톡 튀는 분위기 메이커\"\n                    },\n                    {\n                        type: \"앙구스티아스\",\n                        score: 10,\n                        content: \"가족들이랑 별로 친하지 않아서 역할이 따로 없다.\"\n                    },\n                    {\n                        type: \"아델라\",\n                        score: 10,\n                        content: \"가족들 모두가 날 사랑해! 귀여운 막내\"\n                    },\n                ]\n            },\n            {\n                question: \"오랜만에 친구들을 만날 때 나는\",\n                answers:[\n                    {\n                        type: \"막달레나\",\n                        score: 2,\n                        content: \"반갑게 인사하며 이친구 저친구의 안부를 물어본다.\"\n                    },\n                    {\n                        type: \"앙구스티아스\",\n                        score: 5,\n                        content: \"가만히 누가 말을 걸 때 까지 기다린다.\"\n                    },\n                    {\n                        type: \"아델라\",\n                        score: 10,\n                        content: \"처음에는 조용하다가 금방 적응해 분위기를 주도한다.\"\n                    },\n                    {\n                        type: \"마르띠리오\",\n                        score: 10,\n                        content: \"친구들을 만나는 걸 별로 좋아하지 않아 친구들을 만나지 않는다.\"\n                    },\n                ]\n            },\n            {\n                question: \"오랜만에 찾아온 휴일에 나는\",\n                answers:[\n                    {\n                        type: \"앙구스티아스\",\n                        score: 2,\n                        content: \"밀어둔 집안일을 하며 혼자 산책을 나가기도 한다.\"\n                    },\n                    {\n                        type: \"아멜리아\",\n                        score: 5,\n                        content: \"미리 약속을 잡아둔 친구들과 만나 밖에서 신나게 논다.\"\n                    },\n                    {\n                        type: \"막달레나\",\n                        score: 10,\n                        content: \"침대 밖을 나가지 않고 하루종일 빈둥거리며 낮잠을 잔다.\"\n                    },\n                    {\n                        type: \"마르띠리오\",\n                        score: 10,\n                        content: \"집 안에서 혼자 영화를 보거나 책을 읽으며 시간을 보낸다.\"\n                    },\n                ]\n            },\n            {\n                question: \"계획을 세워야 할 때 나는\",\n                answers:[\n                    {\n                        type: \"아델라\",\n                        score: 2,\n                        content: \"절대 먼저 계획을 세우는 편이 아니다.\"\n                    },\n                    {\n                        type: \"막달레나\",\n                        score: 5,\n                        content: \"대충대충 계획을 세워본다.\"\n                    },\n                    {\n                        type: \"앙구스티아스\",\n                        score: 10,\n                        content: \"마지막의 마지막까지 계획을 세우는 걸 미룬다.\"\n                    },\n                    {\n                        type: \"아멜리아\",\n                        score: 10,\n                        content: \"최대한 꼼꼼하게 계획을 세우고 검토한다.\"\n                    },\n                ]\n            },\n            {\n                question: \"가족들과의 외식에서 음식점을 내가 골라야 한다면\",\n                answers:[\n                    {\n                        type: \"막달레나\",\n                        score: 2,\n                        content: \"이미 준비한 180902가지의 맛집 리스트가 있다.\"\n                    },\n                    {\n                        type: \"마르띠리오\",\n                        score: 5,\n                        content: \"가족들과 별로 밥을 먹고 싶지 않다.\"\n                    },\n                    {\n                        type: \"앙구스티아스\",\n                        score: 10,\n                        content: \"아무 곳이나 상관없다며 다른 사람에게 고르라고 부탁한다.\"\n                    },\n                    {\n                        type: \"아멜리아\",\n                        score: 10,\n                        content: \"일단 나가서 마음에 드는 식당이 보이면 들어간다.\"\n                    },\n                ]\n            },\n            {\n                question: \"화가 나서 화를 내려고 할 때\",\n                answers:[\n                    {\n                        type: \"막달레나\",\n                        score: 2,\n                        content: \"내도 소용이 없다 생각하고 화를 내지 않는다.\"\n                    },\n                    {\n                        type: \"아델라\",\n                        score: 5,\n                        content: \"불같이 화를 내며 하고 싶던 말을 다 한다.\"\n                    },\n                    {\n                        type: \"아멜리아\",\n                        score: 10,\n                        content: \"여기서 화를 내면 안된다고 스스로를 진정시킨다.\"\n                    },\n                    {\n                        type: \"앙구스티아스\",\n                        score: 10,\n                        content: \"사람들이 이미 나에게 화를 내고 있어 화를 낼 수 없다.\"\n                    },\n                ]\n            },\n            {\n                question: \"나중에 어디론가 갈 수 있다면 나는\",\n                answers:[\n                    {\n                        type: \"막달레나\",\n                        score: 2,\n                        content: \"초원에 가 말을 타고 싶다.\"\n                    },\n                    {\n                        type: \"마르띠리오\",\n                        score: 5,\n                        content: \"첫사랑과 함께 한 장소를 찾아간다.\"\n                    },\n                    {\n                        type: \"아멜리아\",\n                        score: 10,\n                        content: \"푸르른 나무가 무성한 강가를 간다.\"\n                    },\n                    {\n                        type: \"아델라\",\n                        score: 10,\n                        content: \"시원한 파도가 치는 바다로 갈 거야!\"\n                    },\n                ]\n            },\n        ],\n        results:[\n            {\n                type: \"아델라\",\n                desc: `어리고 제일 예뻤어~ 아델라!`,\n                query: \"fifth\",\n                score_range:range(26),\n                img_src:'https://user-images.githubusercontent.com/35620531/109660294-05fd2680-7bac-11eb-9c8a-98faa4ba7f19.png',\n                real_meta: 'https://rawcdn.githack.com/albaofespana/alba-2021/978de6b2ade2d31dffae02a9916d1a3234a91de9/src/result/adela.html'\n            },\n            {\n                type: \"마르띠리오\",\n                desc: `남자들이 다 싫어해~ 마르띠리오!`,\n                query: \"fourth\",\n                score_range:range(26, 51),\n                img_src:'https://user-images.githubusercontent.com/35620531/109660461-3d6bd300-7bac-11eb-8377-d56d2ed46070.png',\n                real_meta: 'https://rawcdn.githack.com/albaofespana/alba-2021/978de6b2ade2d31dffae02a9916d1a3234a91de9/src/result/martirio.html'\n            },\n            {\n                type: \"아멜리아\",\n                desc: `부끄럼만 많아~ 아멜리아!`,\n                query: \"third\",\n                score_range:range(51, 75),\n                img_src:'https://user-images.githubusercontent.com/35620531/109660136-db12d280-7bab-11eb-9a59-4fa6ec046758.png',\n                real_meta: 'https://rawcdn.githack.com/albaofespana/alba-2021/978de6b2ade2d31dffae02a9916d1a3234a91de9/src/result/amelia.html'\n\n            },\n            {\n                type: \"앙구스티아스\",\n                desc: `첫째딸 이름은~ 앙구스티아스!`,\n                query: \"first\",\n                score_range:range(76, 101),\n                img_src:'https://user-images.githubusercontent.com/35620531/109660521-4fe60c80-7bac-11eb-89c2-90d9cafcc083.png',\n                real_meta: 'https://rawcdn.githack.com/albaofespana/alba-2021/978de6b2ade2d31dffae02a9916d1a3234a91de9/src/result/angustias.html'\n\n            },\n            {\n                type: \"막달레나\",\n                desc: `온종일 낮잠만 자~ 막달레나!`,\n                query: \"second\",\n                score_range:range(76, 101),\n                img_src:'https://user-images.githubusercontent.com/35620531/109660599-655b3680-7bac-11eb-87be-6c88d002de9f.png',\n                real_meta: 'https://rawcdn.githack.com/albaofespana/alba-2021/978de6b2ade2d31dffae02a9916d1a3234a91de9/src/result/magdalena.html'\n\n            },\n        ]\n    },\n]\n\nexport default TESTS;\n","import React, {Component, Fragment} from 'react';\nimport {Link} from 'react-router-dom'\nimport TESTS from '../api/TESTS'\n\nclass MainPage extends Component{\n    constructor(props){\n        super(props)\n        let i = 0;\n        let _all_tests_url = [];\n        while (i<TESTS.length) {\n        _all_tests_url.push(['/'+TESTS[i].info.mainUrl+'/', TESTS[i].info.thumbImage, TESTS[i].info.mainTitle])\n        i = i + 1;\n        }\n        this.state = {\n            all_tests_url:_all_tests_url,\n        }\n    }\n\n    render(){\n        return (\n            <Fragment>\n\n                <div className=\"main-link-div\">\n                    {this.state.all_tests_url.map((item)=>(\n                        <Link to={item[0]} className=\"main-link-block\" key={item[0].replaceAll('/','')}>\n                            <img className=\"test-main-img\" src={item[1]} alt={item[2]}/>                               \n                        </Link>\n                    ))}\n                </div>\n\n\n            </Fragment>\n            \n        )       \n    }\n}\n\nexport default MainPage;","import React, { Component } from 'react';\nimport { ProgressBar } from 'react-bootstrap';\n\nclass QuestionCount extends Component {\n    \n    render(){\n        return(\n            <div className=\"question-progress\">\n                <div className='progress-bar' >\n                    <ProgressBar now={this.props.quizCount / this.props.totalCount * 100} variant=\"danger\" />\n                </div>\n                <div className=\"question-count\">\n                    {this.props.quizCount+1} / {this.props.totalCount}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default QuestionCount;","import React, { Component } from 'react';\n\nclass Question extends Component {\n    render(){\n        return(\n            <div className=\"question\">\n                <h5 className=\"question-p\">{this.props.question}</h5>\n            </div>\n        );\n    }\n}\n\nexport default Question;","import React, { Component, Fragment } from 'react';\nimport QuestionCount from './QuestionCount'\nimport Question from './Question'\nimport { Button } from 'react-bootstrap';\n\nclass Quiz extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            quizCount:0,\n        }\n    }\n\n    arrayShuffler(array){\n        var currentIndex = array.length, temporaryValue, randomIndex;\n          \n        while (0 !== currentIndex) {\n        \n\n            randomIndex = Math.floor(Math.random() * currentIndex);\n            currentIndex -= 1;\n        \n            temporaryValue = array[currentIndex];\n            array[currentIndex] = array[randomIndex];\n            array[randomIndex] = temporaryValue;\n        }\n        \n        return array;\n    }\n    renderImgAnswerOptions(){\n        let qAndA = this.props.qAndA[this.props.quizNum];\n        let qAndAImg = qAndA.questionImage\n        if(this.props.scoreType === \"numberScoringImg\" && qAndA.questionImage !== ''){\n            return(\n                <div>\n                    <img src={qAndAImg} className='answer-option-img' alt={qAndA.question} />\n                </div>\n            )\n        }\n    }\n    renderAnswerOptions(){\n        let qAndA = this.props.qAndA[this.props.quizNum];\n        var _questions = [];\n        var i = 0;\n        var nextQuizNum = this.props.quizNum + 1;\n        while(i < qAndA.answers.length){\n\n            if(this.props.scoreType === \"numberScoring\" || this.props.scoreType === \"numberScoringImg\"){\n                _questions.push(\n                    <Button\n                        key={this.props.quizNum-i}\n                        value={qAndA.answers[i].score} \n                        onClick={function(e) {\n                            e.preventDefault();\n                            if(this.props.quizNum === this.props.qAndA.length-1){\n                                this.props.onChangeMode(nextQuizNum, e.target.value, \"loading\");\n                            } else {\n                                this.setState({\n                                    quizCount:this.state.quizCount+1\n                                })\n                                this.props.onChangeMode(nextQuizNum, e.target.value, \"quiz\");\n                            }\n                        }.bind(this)}\n                        variant=\"outline-dark\" \n                        size=\"lg\"\n                        className=\"option-btn\"\n                    >{qAndA.answers[i].content}</Button>)\n            } else if (this.props.scoreType === \"typeCounting\"){\n                _questions.push(\n                    <Button\n                        key={this.props.quizNum-i}\n                        value={qAndA.answers[i].type}\n                        onClick={function(e) {\n                            e.preventDefault();\n\n                            if(this.props.quizNum === this.props.qAndA.length-1){\n                                this.props.onChangeMode(nextQuizNum, e.target.value, \"loading\");\n                            } else {\n                                this.setState({\n                                    quizCount:this.state.quizCount+1\n                                })\n                                this.props.onChangeMode(nextQuizNum, e.target.value, \"quiz\");\n                            }\n                        }.bind(this)}\n                        variant=\"outline-dark\" \n                        size=\"lg\"\n                        className=\"option-btn\"\n                    >{qAndA.answers[i].content}</Button>)\n            } else if (this.props.scoreType === \"typeCountingMBTI\"){\n                _questions.push(\n                    <Button\n                        key={this.props.quizNum-i}\n                        value={qAndA.answers[i].type}\n                        onClick={function(e) {\n                            e.preventDefault();\n                            if(this.props.quizNum === this.props.qAndA.length-1){\n                                this.props.onChangeMode(nextQuizNum, e.target.value, \"loading\");\n                            } else {\n                                this.setState({\n                                    quizCount:this.state.quizCount+1\n                                })\n                                this.props.onChangeMode(nextQuizNum, e.target.value, \"quiz\");\n                            }\n                        }.bind(this)}\n                        variant=\"outline-dark\" \n                        size=\"lg\"\n                        className=\"option-btn\"\n                    >{qAndA.answers[i].content}</Button>)\n            } \n            i = i + 1;\n        }\n        _questions = this.arrayShuffler(_questions)\n        return(\n            _questions\n        )\n    }\n    render(){\n        \n        return(\n            <Fragment>\n                <Question question={this.props.qAndA[this.props.quizNum].question}></Question>\n\n                <Fragment>\n                    {this.renderImgAnswerOptions()}\n                </Fragment>\n                <div className=\"option-btn-div\">\n                    {this.renderAnswerOptions()}\n                </div>\n                <QuestionCount totalCount={this.props.qAndA.length} quizCount={this.state.quizCount}></QuestionCount>\n            </Fragment>\n        );\n    }\n}\n\nexport default Quiz;","import React, {Component, Fragment} from 'react';\nimport Intro from './Intro'\nimport TESTS from '../api/TESTS'\nimport {BrowserRouter as Router, Redirect, Route, Switch} from 'react-router-dom';\nimport App from '../App'\nimport {Button, Card} from 'react-bootstrap';\nimport {CopyToClipboard} from 'react-copy-to-clipboard'\nimport {Helmet} from 'react-helmet';\n\nclass Result extends Component {\n    constructor(props){\n        super(props)\n        let _sharable_url = window.location.href\n\n        if(window.location.href.slice(-1) === '/'){\n            _sharable_url = window.location.href.slice(0, -1)\n        } else {\n            _sharable_url = window.location.href\n        }\n\n\n        const _current_url = _sharable_url.split('/').filter(function(t) {return t !== \"\"})\n        const _current_test = _current_url.reverse()[2]\n        const _current_result = _current_url[0]\n\n        this.state = {\n            mode:\"result\",\n            sharable_url:_sharable_url,\n            current_url:_current_url,\n            current_test:_current_test,\n            current_result:_current_result,\n            num_shares_count:0,\n        }\n        this._onBackToStartButtonClick = this._onBackToStartButtonClick.bind(this)\n        this._onShareButtonClick = this._onShareButtonClick.bind(this);\n    }\n    \n\n    _onBackToStartButtonClick(){\n        this.setState({\n            mode:\"intro\"\n        })\n    }\n    _onShareButtonClick(){\n        this.setState({\n            num_shares_count:this.state.num_shares_count+1\n        })\n        alert(\"복사 완료! 링크를 공유해주세요.\");\n    }\n\n\n\n    introPageRender(){\n\n        const current_tests_path = '/' + this.state.current_test + '/';\n        return(\n            <Router basename={process.env.PUBLIC_URL}>\n                <Switch>\n                    <Route path={current_tests_path} component={()=><Intro test={this.state.current_test}/>} exact/>\n                    <Redirect to={current_tests_path} />\n                </Switch>\n            </Router>\n        )\n    }\n\n    resultRender(){\n\n\n        let final_type = ''\n        let final_desc = ''\n        let img_src = ''\n        let test_current = ''\n        let desc_test_current = ''\n        let final_real_meta = ''\n        let i = 0;\n        let _current_test_contents ;\n        while(i<TESTS.length){\n            if(TESTS[i].info.mainUrl === this.state.current_test){\n                _current_test_contents = TESTS[i]\n                let j = 0;\n                while(j<TESTS[i].results.length){\n                    if(TESTS[i].results[j].query === this.state.current_result){\n                        final_type = TESTS[i].results[j].type\n                        final_desc = TESTS[i].results[j].desc\n                        img_src = TESTS[i].results[j].img_src\n                        test_current = TESTS[i].info.mainTitle\n                        desc_test_current = TESTS[i].info.subTitle\n                        final_real_meta = TESTS[i].info.real_meta\n                        break\n                    }\n                    j = j + 1;\n                }\n            }\n            i = i + 1;\n        }\n\n\n        if(_current_test_contents.info.scoreType === \"storyTelling\" || _current_test_contents.info.scoreType === \"typeCountingMBTI\" || _current_test_contents.info.scoreType === \"dualMBTI\" || _current_test_contents.info.scoreType === \"typeCounting\"){\n            return (\n                <Fragment>\n\n                    <img src={img_src} className='result-img' alt={final_type} data-meta={final_real_meta}/>\n                    <Card className=\"result-card\" bg=\"light\">\n                        <Card.Body className=\"result-p\">\n                            <Card.Text>{final_desc}</Card.Text>\n                        </Card.Body>\n                    </Card>\n                </Fragment>\n            )\n        } else {\n            if(final_desc === ``){\n                return (\n                    <Fragment>\n                        <img src={img_src} className='result-img' alt={final_type} />\n                    </Fragment>\n\n                )\n            } else {\n                return (\n                    <Fragment>\n                        <img src={img_src} className='result-img' alt={final_type} />\n                        <Card className=\"result-card\" bg=\"light\">\n                            <Card.Body className=\"result-p\">\n                                <Card.Text>{final_desc}</Card.Text>\n                            </Card.Body>\n                        </Card>\n                    </Fragment>\n                )\n            }\n        }\n\n    }\n\n    mainPageRender(){\n        return(\n            <Router basename={process.env.PUBLIC_URL}>\n                <Switch>\n                    <Route path='/' component={App} exact/>\n                    <Redirect to='/' />\n                </Switch>\n            </Router>\n        )\n    }\n\n    goBack(){\n        this.props.history.goBack();\n    }\n\n    resultPageRender(){\n        return(\n            <Fragment>\n                \n                <div className=\"result\">\n                    <div className=\"result-header\">\n                        <h5 className=\"result-title\">결과는...</h5>\n                        <div className=\"result-value\">\n                            {this.resultRender()}\n                        </div>\n\n                    </div>\n\n\n\n                    <div className=\"share\">\n                        <div className=\"share\">\n                            <CopyToClipboard text={this.props.meta}>\n                                <Button className=\"share-btn\">\n                                <h3\n                                    onClick={this._onShareButtonClick}\n                                    className=\"share-title\">\n                                    🔗 링크공유\n                                </h3>\n                            </Button>\n                            </CopyToClipboard>\n                        </div>\n\n                        <div className=\"re-test-btn\">\n                            <Button className=\"share-btn\">\n                            <h3\n                                className=\"share-title\"\n                                onClick={this._onBackToStartButtonClick}>\n                                🔄 다시하기\n                            </h3>\n                            </Button>\n                        </div>\n                    </div>\n\n\n                </div>\n            </Fragment>\n        );\n    }\n    \n    pageRenderer(){\n        let _page = []\n        if(this.state.mode === \"result\") {\n            _page = this.resultPageRender()\n        } else if (this.state.mode === \"intro\") {\n            _page =  this.introPageRender()\n        } else if (this.state.mode === \"main\") {\n            _page = this.mainPageRender()\n        }\n        return _page\n    }\n\n\n    render(){\n        return(\n            <div>\n                {this.pageRenderer()}\n            </div>\n        );\n    }\n}\n\nexport default Result;\n","import React, { Component } from 'react';\nimport { Fragment } from 'react';\nimport Lottie from 'react-lottie';\nimport * as loading from '../loading-animation.json'\nimport ScriptTag from 'react-script-tag'\n\nconst defaultOptions = {\n    loop: true,\n    autoplay: true,\n    animationData: loading.default,\n    rendererSettings: {\n      preserveAspectRatio: 'xMidYMid slice'\n    }\n  };\n\n\nclass Loading extends Component {\n  componentDidMount(){\n\n    if(window.location.href.includes(\"niair.xyz\")){\n        if(window) (window.adsbygoogle = window.adsbygoogle || []).push({});\n    }\n  }\n    render(){\n        if(window.location.href.includes(\"ktestone.com\")) {\n            return(\n              <Fragment>\n                <ins className=\"kakao_ad_area\" style={{display:\"none\"}}\n                data-ad-unit    = \"DAN-M3XcjSrV4BrUGCJG\"\n                data-ad-width   = \"300\"\n                data-ad-height  = \"250\"></ins>\n                <ScriptTag type=\"text/javascript\" src=\"//t1.daumcdn.net/kas/static/ba.min.js\" async></ScriptTag>\n                <div className=\"loading\" >\n                    <Lottie options={defaultOptions} height={120} width={120}/>\n                </div>\n              </Fragment>\n            )\n          } else if(window.location.href.includes(\"https://kapable.github.io/\")) {\n            return(\n              <Fragment>\n                <ins className=\"kakao_ad_area\" style={{display:\"none\"}}\n                data-ad-unit    = \"DAN-rgfAOJhp6Faz2JFX\"\n                data-ad-width   = \"300\"\n                data-ad-height  = \"250\"></ins>\n                <ScriptTag type=\"text/javascript\" src=\"//t1.daumcdn.net/kas/static/ba.min.js\" async></ScriptTag>\n                <div className=\"loading\" >\n                    <Lottie options={defaultOptions} height={120} width={120}/>\n                </div>\n              </Fragment>\n            )\n          } else if(window.location.href.includes(\"localhost\") || window.location.href.includes(\"niair.xyz\") || window.location.href.includes(process.env.PUBLIC_URL)) {\n            return(\n              <Fragment>\n                <ins className=\"adsbygoogle\"\n                    style={{display:\"block\"}}\n                    data-ad-client=\"ca-pub-2382342018701919\"\n                    data-ad-slot=\"4650135764\"\n                    data-ad-format=\"auto\"\n                    data-full-width-responsive=\"true\"></ins>\n                <div className=\"loading\" >\n                    <Lottie options={defaultOptions} height={120} width={120}/>\n                </div>\n              </Fragment>\n            )\n          }\n    }\n}\n\nexport default Loading;\n\n","import React, { Component, Fragment } from 'react';\nimport { InputGroup, FormControl, Button } from 'react-bootstrap';\n\nclass BirthdayCalc extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            currentYear:new Date().getFullYear(),\n            year:\"연(ex. 2000)\",\n            month:\"월(ex. 12)\",\n            day:\"일(ex. 31)\",\n        }\n    }\n    handleChange(field, e){         \n        let fields = this.state.fields;\n        fields[field] = e.target.value;        \n        this.setState({fields});\n    }\n    submitBtnHandler(){\n        \n    }\n    render (){\n        return (\n            <Fragment>\n                <div className=\"birth-input\">\n                    <h3 className=\"birth-title\">생년월일을 입력해보세요!</h3>\n                    <InputGroup >\n                        <FormControl onChange={function(e) {\n                            e.preventDefault();\n                            let _year = 0;\n                            if (Number(e.target.value.slice(0, 4)) < this.state.currentYear){\n                                _year = e.target.value.slice(0, 4);\n                            } else {\n                                _year = this.state.currentYear;\n                            }\n                            this.setState({\n                                year:_year\n                            })\n                        }.bind(this)} value={this.state.year} pattern=\"[0-9]*\" error={this.value} type=\"number\" placeholder=\"연(ex. 2000)\" max={this.state.currentYear} maxLength=\"4\" key=\"birthCalcYear\"/>\n                        <FormControl onChange={function(e) {\n                            e.preventDefault();\n                            let _month = 0;\n                            if (Number(e.target.value.slice(0, 2)) < 13){\n                                _month = e.target.value.slice(0, 2);\n                            } else {\n                                _month = 12;\n                            }\n                            this.setState({\n                                month:_month\n                            })\n                        }.bind(this)} value={this.state.month} pattern=\"[0-9]*\" type=\"number\" placeholder=\"월(ex. 12)\" max={12} maxLength=\"2\" key=\"birthCalcMonth\"/>\n                        <FormControl onChange={function(e) {\n                            e.preventDefault();\n                            let _day = 0;\n                            if (Number(e.target.value.slice(0, 2)) < 32){\n                                _day = e.target.value.slice(0, 2);\n                            } else {\n                                _day = 31;\n                            }\n                            this.setState({\n                                day:_day\n                            })\n                        }.bind(this)} value={this.state.day} pattern=\"[0-9]*\" type=\"number\" placeholder=\"일(ex. 31)\" max={31} maxLength=\"2\" key=\"birthCalcDay\"/>\n                    </InputGroup>\n                    <div>\n                        <Button onClick={function(e) {\n                            if (this.state.year.length === 4 && (this.state.month.length === 1 || this.state.month.length === 2) && (this.state.day.length === 1 || this.state.day.length === 2)) {\n                                e.preventDefault();\n                                let _finalBirth = this.state.year+this.state.month+this.state.day;\n\n                                let final_result = 0;\n                                for(let j=0;j<_finalBirth.length;j++){\n                                    final_result = final_result + Number(_finalBirth[j])\n                                }\n\n                                if(final_result.toString().length === 2) {\n                                    _finalBirth = final_result.toString()\n                                    final_result = Number(_finalBirth[0]) + Number(_finalBirth[1])\n                                    if(final_result.toString().length === 2) {\n                                        _finalBirth = final_result.toString()\n                                        final_result = Number(_finalBirth[0]) + Number(_finalBirth[1])\n                                    }\n                                }\n                                this.props.onChangeMode(final_result, \"loading\");\n                            } else {\n                                alert(\"생년월일을 정확히 입력해주세요!\")\n                            }\n                            \n                        }.bind(this)} key=\"birthCalcBtn\" className=\"birthday-submit-btn\" variant=\"secondary\">➥ 내 탄생수 알아보기</Button>\n                    </div>\n                <p className=\"private-info-desc\" >개인정보는 테스트를 위한 용도로만 사용되며, <br></br> 사용 후 바로 폐기됩니다.</p>\n                </div>\n            </Fragment>\n        )\n    }\n}\n\nexport default BirthdayCalc;","import React, { Component, Fragment } from 'react';\nimport { InputGroup, Button, Form } from 'react-bootstrap';\n\nclass DualMbti extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            myColor:'',\n            yourColor:'',\n            myMBTI:'',\n            yourMBTI:'',\n            personal_colors:{\"캑터스\":\"ESTJ\", \"로즈버드\":\"ESTP\", \"바닐라 아이스\":\"ESFJ\", \"스위트 핑크\":\"ESFP\",\n                            \"네이비 피오니\":\"ENTJ\", \"웜 플레임\":\"ENTP\", \"다우니\":\"ENFJ\", \"댄덜라이언\":\"ENFP\",\n                            \"페리글라스 블루\":\"ISTJ\", \"오션딥스\":\"ISTP\", \"오아시스\":\"ISFJ\", \"스프라우트\":\"ISFP\",\n                            \"퀼트스\":\"INTJ\", \"세룰리안\":\"INTP\", \"앨리스 블루\":\"INFJ\", \"오션베이\":\"INFP\"},\n        }\n    }\n\n    personalColorTestRedirector(){\n        window.open('https://ktestone.com/kapable.github.io/personalColor/')\n    }\n    renderColorOptions(who){\n        let _colors = Object.keys(this.state.personal_colors)\n        let _options = [<option key={\"0-drop-\"+who}>눌러서 선택</option>];\n        for(let c=0;c<_colors.length;c++){\n            _options.push(\n                <option key={c+'-'+who}>{_colors[c]}</option>)\n        }\n        return(\n            _options\n        )\n\n    }\n    render (){\n        return (\n            <Fragment>\n                <div className=\"dualColor-input\">\n                    <InputGroup className=\"dualColor-input-group\">\n                        <Form.Group className=\"dualColor-eachForm\">\n                            <Form.Label>내 컬러</Form.Label>\n                            <Form.Control as=\"select\" onChange={function(e){\n                                e.preventDefault();\n                                let _myColor = e.target.value\n                                let _myMbti = this.state.personal_colors[_myColor]\n                                this.setState({\n                                    myColor:_myColor,\n                                    myMBTI:_myMbti\n                                })\n                            }.bind(this)} value={this.state.myColor} key=\"myDualMBTI\">\n                                {this.renderColorOptions(\"my\")}\n                            </Form.Control>\n                        </Form.Group>\n                        <Form.Group className=\"dualColor-eachForm\">\n                            <Form.Label>상대방 컬러</Form.Label>\n                            <Form.Control as=\"select\" onChange={function(e){\n                                e.preventDefault();\n                                let _yourColor = e.target.value\n                                let _yourMbti = this.state.personal_colors[_yourColor]\n                                this.setState({\n                                    yourColor:_yourColor,\n                                    yourMBTI:_yourMbti\n                                })\n                            }.bind(this)} value={this.state.yourColor} key=\"yourDualMBTI\">\n                                {this.renderColorOptions(\"your\")}\n                            </Form.Control>\n                        </Form.Group>\n                    </InputGroup>\n                    <div>\n                        <Button onClick={function(e) {\n                            e.preventDefault();\n                            if(this.state.myMBTI === '' || this.state.myMBTI === undefined){\n                                alert(\"내 컬러를 선택해주세요!\")\n                            } else if (this.state.yourMBTI === '' || this.state.yourMBTI === undefined){\n                                alert(\"상대방 컬러를 선택해주세요!\")\n                            } else {\n                                let _final_result = this.state.myMBTI + this.state.yourMBTI\n                                this.props.onChangeMode(_final_result, \"loading\");\n                            }\n\n                        }.bind(this)} key=\"dualMBTIBtn\" className=\"dualMBTI-submit-btn\" variant=\"secondary\">➥ 궁합 결과 보러가기</Button>\n                    </div>\n                    <p>내 퍼스널 컬러를 모른다면?</p>\n                    <Button\n                        className=\"to-personalColor-test-btn\"\n                        onClick={this.personalColorTestRedirector}\n                        variant=\"secondary\"\n                        >내 퍼스널 컬러 테스트 하러가기</Button>\n                </div>\n            </Fragment>\n        )\n    }\n}\n\nexport default DualMbti;\n","import React, { Component, Fragment } from 'react';\n\nclass StoryTelling extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            quizCount:0,\n        }\n    }\n    renderStoryImg(){\n        let qAndA = this.props.qAndA[this.props.quizNum];\n        let nextQuizNum = this.props.quizNum + 1;\n        return(\n            <Fragment>\n                <img\n                    src={qAndA.answers[0].content}\n                    alt={qAndA.answers.type}\n                    className=\"storytelling-img\"\n                    onClick={function(e) {\n                        e.preventDefault();\n                        if(this.props.quizNum === this.props.qAndA.length-1){\n                            this.props.onChangeMode(nextQuizNum, \"loading\");\n                        } else {\n                            this.setState({\n                                quizCount:this.state.quizCount+1\n                            })\n                            this.props.onChangeMode(nextQuizNum, \"quiz\");\n                        }\n                    }.bind(this)}/>\n            </Fragment>\n        )\n    }\n    render(){\n        return(\n            <Fragment>\n                {this.renderStoryImg()}\n            </Fragment>\n        )\n    }\n}\n\nexport default StoryTelling;","import React, {Component, Fragment} from 'react';\nimport Quiz from './Quiz'\nimport Result from './Result'\nimport Loading from './Loading'\nimport BirthdayCalc from './BirthdayCalc'\nimport DualMbti from './DualMbti'\nimport StoryTelling from './StoryTelling'\nimport TESTS from '../api/TESTS'\nimport {BrowserRouter as Router, Redirect, Route, withRouter} from 'react-router-dom';\nimport {Button} from 'react-bootstrap';\nimport {CopyToClipboard} from 'react-copy-to-clipboard'\nimport {Helmet} from 'react-helmet';\n\nclass Intro extends Component {\n    constructor(props){\n        super(props)\n        let _current_test = [];\n        let i = 0;\n        while (i<TESTS.length) {\n            if(TESTS[i].info.mainUrl === this.props.test){\n                _current_test = TESTS[i]\n                break\n            }\n            i = i + 1\n        }\n\n        let _answer_type_obj = {};\n        for(let k=0; k<_current_test.questions.length; k++) {\n            for(let l=0; l<_current_test.questions[k].answers.length; l++){\n                _answer_type_obj[_current_test.questions[k].answers[l].type] = 0;\n            }\n        }\n\n        let _sharable_url = window.location.href\n        if(window.location.href.slice(-1) === '/'){\n            _sharable_url = window.location.href.slice(0, -1)\n        } else {\n            _sharable_url = window.location.href\n        }\n\n        let today = new Date();\n        let month = String(today.getMonth() + 1)\n        let date = String(today.getDate()).padStart(2, '0');\n        let hour = String(today.getHours()).padStart(2, '0');\n        let minute = String(today.getMinutes()).padStart(2, '0');\n\n        this.state = {\n            mode:'intro',\n            current_test:_current_test,\n            qAndA:_current_test.questions,\n            scoreType:_current_test.info.scoreType,\n            answer_type_obj:_answer_type_obj,\n            quizNumber:0,\n            counted_score:0,\n            result_url:'/result/',\n            quiz_url:_sharable_url,\n            participants:(Number(month+date+hour+minute)*10).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"),\n            num_shares_count:0,\n        }\n        this._onStartButtonClick = this._onStartButtonClick.bind(this);\n        this._onMainButtonClick = this._onMainButtonClick.bind(this);\n        this._onShareButtonClick = this._onShareButtonClick.bind(this);\n    }\n\n    componentDidMount(){\n        if(this.state.quiz_url.includes(\"niair.xyz\")){\n            if(window) (window.adsbygoogle = window.adsbygoogle || []).push({});\n        }\n    }\n\n\n    _onStartButtonClick(){\n        this.setState({\n            mode:'quiz'\n        })\n    }\n\n    _onMainButtonClick(){\n        this.setState({\n            mode:'main'\n        })\n    }\n\n    _onShareButtonClick(){\n        this.setState({\n            num_shares_count:this.state.num_shares_count+1\n        })\n        alert(\"복사 완료! 링크를 공유해주세요.\");\n    }\n\n\n    introPageRender(){\n\n        let _mainTitle = this.state.current_test.info.mainTitle;\n        let _subTitle = this.state.current_test.info.subTitle;\n        let _thumbImage = this.state.current_test.info.mainImage;\n\n        return (\n            <div className=\"intro container\">\n\n                <img\n                    className=\"intro-main-img\"\n                    onClick={this._onStartButtonClick}\n                    src={_thumbImage}\n                    alt={_mainTitle + '|' + _subTitle}/>\n\n\n                <div className=\"test-intro-with-friend\">\n                    <CopyToClipboard text={this.state.quiz_url+'/'}>\n                        <Button className=\"test-intro-with-friend-btn\">\n                            <h3\n                                className=\"test-intro-with-friend-img\"\n                                onClick={this._onShareButtonClick}>\n                                🔗 링크공유\n                            </h3>\n                        </Button>\n                    </CopyToClipboard>\n                </div>\n\n            </div>\n        );\n    }\n\n    resultCaculator(){\n        if (this.state.scoreType === \"numberScoring\" || this.state.scoreType === \"birthdayCalc\" || this.state.scoreType === \"storyTelling\" || this.state.scoreType === \"numberScoringImg\" ){\n            let final_score = this.state.counted_score;\n            for (let k = 0; k < this.state.current_test.results.length; k++){\n                if(this.state.current_test.results[k].score_range.includes(final_score)){\n                    return this.state.current_test.results[k];\n                }\n            }\n        } else if (this.state.scoreType === \"typeCounting\") {\n            let final_result = this.state.answer_type_obj;\n\n            let keys = Object.keys(final_result);\n            let max = final_result[keys[0]];\n            let max_keys = [];\n            for (let z = 0 ; z < keys.length; z++) {\n                let value = final_result[keys[z]];\n                if (value > max) max = value\n            }\n            for (let key of keys) {\n                if(final_result[key] === max) {\n\n                    max_keys.push(key)\n                }\n            }\n            for (let z=0;z<this.state.current_test.results.length;z++){\n                if(max_keys[0] === this.state.current_test.results[z].type){\n                    return this.state.current_test.results[z]\n                }\n            }\n        } else if (this.state.scoreType === \"typeCountingMBTI\") {\n            let final_result_obj = this.state.answer_type_obj;\n\n            function onlyUnique(value, index, self) {\n                return self.indexOf(value) === index;\n              }\n            let _which_type_arr = [];\n            for(let k=0; k<this.state.current_test.questions.length; k++) {\n                _which_type_arr.push(this.state.current_test.questions[k].which);\n            }\n            _which_type_arr = _which_type_arr.filter(onlyUnique);\n\n            let final_type = '';\n            for(let i=0; i<_which_type_arr.length; i++){\n                let first_type = _which_type_arr[i][0]\n                let second_type = _which_type_arr[i][1]\n                let type_arr = [first_type, second_type]\n                let max_val = 0\n                if(final_result_obj[first_type] !== final_result_obj[second_type]) {\n                    max_val = Math.max(final_result_obj[first_type], final_result_obj[second_type])\n                    type_arr.filter(item => final_result_obj[item] === max_val).forEach(item => final_type += item)\n                } else {\n                    final_type += type_arr[0]\n                }\n\n            }\n\n            for (let z=0;z<this.state.current_test.results.length;z++){\n                if(final_type === this.state.current_test.results[z].type){\n                    return this.state.current_test.results[z]\n                }\n            }\n        } else if (this.state.scoreType === \"dualMBTI\") {\n            let final_type = this.state.counted_score;\n            for (let k = 0; k < this.state.current_test.results.length; k++){\n                if(this.state.current_test.results[k].type === final_type){\n                    return this.state.current_test.results[k];\n                }\n            }\n        }\n\n    }\n    quizPageRender(){\n        if(this.state.mode === \"quiz\"){\n            if (this.state.scoreType === \"numberScoring\" || this.state.scoreType === \"numberScoringImg\") {\n                let _page = <Quiz\n                qAndA={this.state.qAndA}\n                quizNum={this.state.quizNumber}\n                scoreType={this.state.scoreType}\n                onChangeMode={\n                    function(_quizNum, _score, _mode) {\n                    let _scores = this.state.counted_score + Number(_score)\n                    this.setState({\n                        quizNumber:_quizNum,\n                        counted_score:_scores,\n                        mode:_mode\n                    })\n                }.bind(this)}></Quiz>\n                return(\n                    _page\n                )\n            } else if (this.state.scoreType === \"typeCounting\") {\n                let _page = <Quiz\n                qAndA={this.state.qAndA}\n                quizNum={this.state.quizNumber}\n                scoreType={this.state.scoreType}\n                onChangeMode={\n                    function(_quizNum, _answer, _mode) {\n                    var _answer_obj = Object.assign({}, this.state.answer_type_obj);\n                    _answer_obj[_answer] = _answer_obj[_answer] + 1;\n                    this.setState({\n                        quizNumber:_quizNum,\n                        answer_type_obj:_answer_obj,\n                        mode:_mode\n                    })\n                }.bind(this)}></Quiz>\n                return _page\n            } else if (this.state.scoreType === \"birthdayCalc\"){\n                let _page = <BirthdayCalc\n                onChangeMode={\n                    function(_final_result, _mode) {\n                    this.setState({\n                        counted_score:_final_result,\n                        mode:_mode\n                    })\n                }.bind(this)}></BirthdayCalc>\n                return _page\n            } else if (this.state.scoreType === \"dualMBTI\") {\n                let _page = <DualMbti\n                onChangeMode={\n                    function(_final_result, _mode) {\n                    this.setState({\n                        counted_score:_final_result,\n                        mode:_mode\n                    })\n                }.bind(this)}></DualMbti>\n                return _page\n            } else if (this.state.scoreType === \"storyTelling\"){\n                let _page = <StoryTelling\n                qAndA={this.state.qAndA}\n                quizNum={this.state.quizNumber}\n                scoreType={this.state.scoreType}\n                onChangeMode={\n                    function(_quizNum, _mode) {\n                        this.setState({\n                            quizNumber:_quizNum,\n                            mode:_mode\n                        })\n                    }.bind(this)}\n                ></StoryTelling>\n                return _page\n            } else if (this.state.scoreType === \"typeCountingMBTI\") {\n                let _page = <Quiz\n                qAndA={this.state.qAndA}\n                quizNum={this.state.quizNumber}\n                scoreType={this.state.scoreType}\n                onChangeMode={\n                    function(_quizNum, _answer, _mode) {\n                    var _answer_obj = Object.assign({}, this.state.answer_type_obj);\n                    _answer_obj[_answer] = _answer_obj[_answer] + 1;\n                    this.setState({\n                        quizNumber:_quizNum,\n                        answer_type_obj:_answer_obj,\n                        mode:_mode\n                    })\n                }.bind(this)}></Quiz>\n                return _page\n            }\n            return this._page\n        }\n    }\n\n    lodingPageRender(){\n        console.log(\"lodingPageRender call\")\n        return(\n            <div className=\"loading-upper\">\n                <Loading />\n                {setTimeout(function(){\n                    this.setState({mode:\"result\"})\n                }.bind(this), 4000)}\n            </div>\n        )\n    }\n\n    resultPageRender(){\n        let result_contents = this.resultCaculator();\n        let final_score_query = result_contents.query\n        console.log(final_score_query)\n        return(\n            <Router basename={ 'alba-2021/' + this.state.current_test.info.mainUrl}>\n                <Route path={this.state.result_url+final_score_query} render={() => <Result meta={result_contents.real_meta}/>}/>\n                <Redirect to={this.state.result_url+final_score_query} />\n            </Router>\n        )\n    }\n\n    pageRenderer(){\n        let _page = []\n        if(this.state.mode === \"intro\") {\n            _page = this.introPageRender()\n        } else if (this.state.mode === \"quiz\") {\n            _page =  this.quizPageRender()\n        } else if (this.state.mode === \"main\") {\n            _page = this.props.history.push('/')\n        } else if (this.state.mode === \"loading\") {\n            _page = this.lodingPageRender()\n        } else if (this.state.mode === \"result\") {\n            _page = this.resultPageRender()\n        }\n\n        return _page\n    }\n\n    render(){\n        return (\n            <Fragment>\n                {this.pageRenderer()}\n            </Fragment>\n        );\n    }\n}\n\nexport default withRouter(Intro);\n","import React, { Component } from 'react';\nimport Intro from './Intro'\nimport { BrowserRouter as Router, Route, Redirect, Switch} from 'react-router-dom';\nimport { Button } from 'react-bootstrap';\n\nclass ResultToIntro extends Component {\n    constructor(props){\n        super(props)\n        this.state = {\n            mode:\"result\",\n            test_main_url:'/relationtype/',\n        }\n        this._onBackToStartButtonClick = this._onBackToStartButtonClick.bind(this)\n    }\n    _onBackToStartButtonClick(){\n        this.setState({\n            mode:\"intro\"\n        })\n    }\n    introPageRender(){\n        return(\n            <Router basename={process.env.PUBLIC_URL}>\n                <Switch>\n                    <Route path={this.state.test_main_url} component={Intro} exact/>\n                    <Redirect to={this.state.test_main_url} />\n                </Switch>\n            </Router>\n        )\n    }\n    defaultGuidePageRender(){\n        return(\n            <div className='guide-div'>\n                <div className=\"guide-desc\">\n                    ...\n                </div>\n                <div className=\"guide-re-test-btn\">`\n                    <Button onClick={this._onBackToStartButtonClick} className=\"retest-btn\" variant=\"dark\">테스트 다시하기</Button>\n                </div>\n            </div>\n            \n        )\n    }\n    render(){\n        return(\n            <div>\n                {this.state.mode === 'result' ? this.defaultGuidePageRender() : this.introPageRender()}\n            </div>\n        )\n    }\n}\n\nexport default ResultToIntro;","import { Component } from 'react';\nimport { withRouter } from 'react-router';\n\nclass ScrollToTop extends Component {\n  componentDidUpdate(prevProps) {\n    if (this.props.location !== prevProps.location) {\n      window.scrollTo(0, 0)\n    }\n  }\n\n  render() {\n    return this.props.children\n  }\n}\n\nexport default withRouter(ScrollToTop)","import React, {Component, Fragment} from 'react';\nimport MainPage from './components/MainPage';\nimport Intro from './components/Intro'\nimport ResultToIntro from './components/ResultToIntro'\nimport ScrollToTop from './components/ScrollToTop'\nimport TESTS from './api/TESTS'\nimport {BrowserRouter as Router, Route, Switch} from 'react-router-dom';\nimport Result from './components/Result';\nimport {Helmet} from 'react-helmet';\n\n\nclass App extends Component {\n  constructor(props){\n    super(props)\n    const _sharable_url = window.location.href;\n    let i = 0;\n    let _all_tests_url = [];\n    while (i<TESTS.length) {\n      _all_tests_url.push('/'+TESTS[i].info.mainUrl+'/')\n      i = i + 1;\n    }\n    let j = 0;\n    let _all_tests_result_url = [];\n    while (j<_all_tests_url.length){\n      _all_tests_result_url.push(_all_tests_url[j]+'result/')\n      j = j + 1;\n    }\n    let _final_render_routes = [];\n    var k = 0;\n\n    while(k<TESTS.length){\n      var l=  0;\n      while(l<TESTS[k].results.length){\n        _final_render_routes.push([TESTS[k].results[l].query, TESTS[k].info.mainUrl])\n        l = l + 1;\n      }\n      k = k + 1;\n    }\n    this.state = {\n      result_route:'result/',\n      all_tests_url:_all_tests_url,\n      all_tests_result_url:_all_tests_result_url,\n      final_render_routes:_final_render_routes,\n      sharable_url:_sharable_url,\n    }\n  }\n\n  reloadPage() {\n    var currentDocumentTimestamp = new Date(performance.timing.domLoading).getTime();\n    var now = Date.now();\n    var tenSec = 10 * 1000;\n    var plusTenSec = currentDocumentTimestamp + tenSec;\n    if (now > plusTenSec) { window.location.reload(); } else {}\n  }\n\n\n\n\n  privateRoute(){\n      if (window.location.href.includes(\"index.html\")){\n\n      }\n    }\n\n  render() {\n    return(\n    <Router>\n    <Fragment>\n\n      {this.reloadPage()}\n\n\n\n      <Router basename={process.env.PUBLIC_URL}>\n        <ScrollToTop>\n          <Switch>\n            <Route path='/' exact>\n                <Helmet>\n                    <title>베르나르다 알바 캐릭터 성격 분석</title>\n                    <meta name=\"title\" content=\"베르나르다 알바 캐릭터 성격 분석\"/>\n                    <meta name=\"description\" content=\"내가 베르나르다 알바 속 캐릭터라면?\" data-react-helmet=\"true\"/>\n                    <link rel=\"main-url\" href={window.location.href}/>\n                    k\n                    <meta property=\"og:type\" content=\"website\"/>\n                    <meta property=\"og:url\" content=\"https://albaofespana.github.io/alba-2021/\"/>\n                    <meta property=\"og:title\" content=\"베르나르다 알바 캐릭터 성격 분석\"/>\n                    <meta property=\"og:image\"\n                          content=\"https://user-images.githubusercontent.com/35620531/109660083-cb938980-7bab-11eb-8a64-0acadaad8233.png\"/>\n                    <meta property=\"og:description\" content=\"베르나르다 알바로 보는 나의 성격은?\"/>\n                    <meta property=\"og:site_name\" content=\"albaofespana.github.io\"/>\n                    <meta name=\"twitter:card\" content=\"summary\"/>\n                    <meta name=\"twitter:title\" content=\"베르나르다 알바 캐릭터 성격 분석\"/>\n                    <meta name=\"twitter:description\" content=\"베르나르다 알바로 보는 나의 성격은?\"/>\n                    <meta name=\"twitter:image\"\n                          content=\"https://user-images.githubusercontent.com/35620531/109660083-cb938980-7bab-11eb-8a64-0acadaad8233.png\"/>\n                </Helmet>\n                <MainPage/>\n            </Route>\n\n              {this.state.all_tests_url.map((item) => (\n                  <Route\n                      path={item}\n                      component={() => <Intro test={item.replaceAll('/', '')}/>}\n                      key={item.replaceAll('/', '')}\n                      exact\n                  />\n              ))}\n\n              <Route path={this.state.all_tests_result_url} component={ResultToIntro} exact/>\n\n              {this.state.final_render_routes.map((item) => (\n                  <Route\n                      path={'/' + item[1] + '/' + this.state.result_route + item[0]}\n                      component={Result}\n                      key={item[1] + '_' + item[0]} exact/>\n              ))}\n          </Switch>\n        </ScrollToTop>\n      </Router>\n\n\n        <div className=\"intro-footer\">\n            <h5>Powered Date<br></br>2021-03-05</h5>\n          <h5>Recent Modify<br></br>KST 2021-03-14 22:30</h5>\n          <p>version: 1.0.3</p>\n      </div>\n    </Fragment>\n    </Router>\n    )\n  }\n\n}\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import 'react-app-polyfill/ie9';\nimport 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport 'core-js';\nimport 'regenerator-runtime/runtime';\nimport React from 'react';\nimport {hydrate, render} from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst rootElement = document.getElementById(\"root\");\nif (rootElement.hasChildNodes()) {\n  hydrate(<App />, rootElement);\n} else {\n  render(<App />, rootElement);\n}\n\nreportWebVitals();\n"],"sourceRoot":""}